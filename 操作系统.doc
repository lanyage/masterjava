///////////
//操作系统//
///////////

1.进程和线程?
CPU:计算机的核心是CPU,它承担了所有的计算任务。它就像一个工厂时刻在运行。
进程:单个CPU一次只能运行一个任务-进程。进程就是运行时的程序。进程就类比一个车间的运转。
线程:一个进程里可以存在多个线程,这些线程协作完成完成进程的任务,进程是操作系统最小的调度单元。线程就好比车间里的工人。

2.线程同步的方式有哪些?
互斥量,信号量,事件
进程里面的内存是共享的,进程里的每一个线程都可以共享这块内存。
为了防止多个线程同时读写某一块内存区域,使用互斥锁mutex
当允许n个线程访问同一个空间时,我们使用信号量semaphore来保证多个线程不冲突
mutex是semaphore,当n==1的时候,完全可使用后者代替前者,但是mutex简单,效率高,当资源互斥的时候建议采用这种方式
事件通过通知操作的方式来支持多线程的同步。比如一个线程完成一个任务之后唤醒另外一个线程。

3.进程之间怎么通信？
主要分为管道,系统IPC(消息队列,信号量,共享内存),SOCKET
管道主要分为:普通管道PIPE,流管道,命名管道
普通管道是一种双半工的通信方式,数据是单向流动的,并且只能在具有亲缘关系的进程之间流动,如果父子进程
命名管道也是一种双半工的通信方式,但是允许非亲缘关系之间的数据流动。
信号量是一个计数器,用来控制多进程对资源的访问,它通常作为一种锁机制。
消息队列是消息的列表,存放在内核中并由消息队列标识符标识
信号是一个比较复杂的通信方式,用于通知接受进程某个事件已经发生。
共享内存就是映射一段能被其他进程访问的内存,这段内存由一个进程创建,但是多个进程可以访问。

4.什么是缓冲区溢出？有什么危害?其原因是什么？
缓冲区溢出是指当计算机向缓冲区填充数据时超出了缓冲区本身的容量,溢出的数据覆盖在合法数据上。
危害:一程序崩溃,导致拒绝服务 二溢出后跳转执行恶意代码
原因:造成缓冲区溢出的原因主要是程序中没有仔细检查用户输入
缓冲区的理解:缓冲区可以抽象的理解为系统中一段可读写的区域,缓冲区的攻击最终目的是希望系统能够执行这块可读写内存中已被蓄意设定好的恶意代码。

5.什么是死锁?死锁产生条件？
死锁是指在一组进程中的各个进程均占有不会释放的资源，但因互相申请被其他进程所站用不会释放的资源而处于的一种永久等待状态。

6.死锁产生的四个条件?
互斥条件-资源不能被共享，只能由一个进程使用
请求与保持条件-一个进程因请求资源而堵塞时,对已经获取的资源不释放
非剥夺条件-已经分配的资源不能从相应的进程中被强制地剥夺
循环等待条件-系统中若干进程组成环路,该环路中每个进程都在等待相邻进程正占用的资源

7.进程有哪集中状态?
就绪状态:已经获取CPU意外的所有资源,等待分配CPU资源
运行状态:已经获取CPU资源,
阻塞状态:进程因为某种情况不能继续执行的状况,如果IO和资源等待

8.分页和分段有什么区别？
一 段是信息的逻辑单位，它是根据用户的需要划分的，因此段对用户是可见的 ；页是信息的物理单位，是为了管理主存的方便而划分的，对用户是透明的。
二 段的大小不固定,完全由完成的功能决定。页的大小是固定的,是由系统决定的。
三 段向用户提供二维地址空间,页向用户提供一维地址空间。(页号,块号) （段号,段长,起始地址）
四 段是信息的逻辑单位，便于存储保护和信息的共享，页的保护和共享受到限制。
例子:记笔记是一页一页记还是分块记,然后在第一页打一个目录

9.操作系统进程调度策略？
先来先服务,优先级算法(非抢占和抢占),短作业优先(等待时间/要求服务时间),时间片轮转,多级反馈

10.进程同步有哪几种策略?
原子操作、信号量机制、自旋锁管程、会合、分布式系统

11.说一说死锁处理基本策略和常用方法
解决死锁的基本方法:预防死锁、避免死锁、检测死锁、解除死锁。
解决死锁的四种策略:鸵鸟策略、预防策略、避免策略(系统在进行资源分配之前预先计算资源分配的安全性-银行家算法)、检测(首先为每个进程和每个资源指
定一个唯一的号码,然后建立资源分配表和进程等待表)与解除死锁(当发现有进程死锁后，便应立即把它从死锁状态中解脱出来,常用的方法就是剥夺资源和撤
消进程,即撤销死锁进程或者撤销代价最小的进程,直至有足够的资源,死锁状态消除为止)
